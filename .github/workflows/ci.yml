name: Android CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Lint - Check for println() statements
        run: |
          echo "Checking for println() statements in Kotlin/Java files..."
          if grep -r "println(" --include="*.kt" --include="*.java" . --exclude-dir=".git" --exclude-dir=".gradle" --exclude-dir="build" --exclude-dir="app"; then
            echo "‚ùå ERROR: Found println() statements in Kotlin/Java files"
            echo "Please use proper logging (Log.d, Log.i, etc.) instead of println() for logging"
            echo "Example: SDKLogger.logger.logDebug { \"Your message\" }"
            exit 1
          else
            echo "‚úÖ No println() statements found in SDK code"
          fi

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 30
          build-tools: 30.0.3

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle (no tests)
        run: ./gradlew assemble

      - name: Save Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: app/build/outputs/apk/

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 30
          build-tools: 30.0.3

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run Unit Tests and Capture Results
        id: run_tests
        run: |
          # Run tests and capture exit code
          ./gradlew test | tee test-results.txt
          TEST_EXIT_CODE=${PIPESTATUS[0]}  # Capture the exit code of ./gradlew test
      
          # Extract a clean test summary from Gradle output
          echo "### üìå Unit Test Summary" > test-summary.txt
          grep -A 10 "Test Summary" test-results.txt | tail -n +2 | sed 's/\x1B\[[0-9;]*[JKmsu]//g' >> test-summary.txt
      
          # Print the test summary in GitHub Actions logs
          cat test-summary.txt
      
          # Fail the workflow if tests fail
          if [ $TEST_EXIT_CODE -ne 0 ]; then
            echo "‚ùå Unit tests failed. See test-results.txt for details."
            exit $TEST_EXIT_CODE  # Fail the workflow
          fi
