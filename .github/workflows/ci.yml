name: Android CI

on:
  # pull_request:
  #   branches: [ main ]
  push:
    branches: [ rajatttt/test ]

jobs:
  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2

  #   - name: Set up JDK 17
  #     uses: actions/setup-java@v1
  #     with:
  #       java-version: 17

  #   - name: Set up Android SDK
  #     uses: android-actions/setup-android@v2
  #     with:
  #       api-level: 30
  #       build-tools: 30.0.3

  #   - name: Cache Gradle
  #     uses: actions/cache@v2
  #     with:
  #       path: |
  #         ~/.gradle/caches
  #         ~/.gradle/wrapper
  #       key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
  #       restore-keys: |
  #         ${{ runner.os }}-gradle-

  #   - name: Build with Gradle
  #     run: ./gradlew build

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: 17

    - name: Set up Android SDK
      uses: android-actions/setup-android@v2
      with:
        api-level: 30
        build-tools: 30.0.3

    - name: Cache Gradle
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Run Unit Tests
      run: ./gradlew testDebugUnitTest

    - name: Parse Unit Test Results
      id: parse_test_results
      run: |
        TEST_RESULTS=$(grep -A 20 "Test Summary" <<< "${{ steps.run_tests.outputs.test_results }}" | tail -n +2)
        echo "::set-output name=test_results::${TEST_RESULTS}"
      shell: bash

    # - name: Comment on PR
    #   uses: marocchino/sticky-pull-request-comment@v2
    #   with:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     header: Test Results
    #     message: ${{ steps.parse_test_results.outputs.test_results }}
    #     recreate: true
