name: Android CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 30
          build-tools: 30.0.3

      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle (no tests)
        run: ./gradlew assemble

      - name: Save Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: app-build
          path: app/build/outputs/apk/

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 30
          build-tools: 30.0.3

      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: app-build
          path: app/build/outputs/apk/
          
      - name: Run Unit Tests
        id: run_tests
        run: ./gradlew test | tee test-results.txt

      - name: Run Unit Tests and Capture Results
        id: run_tests
        run: |
          ./gradlew test | tee test-results.txt
          TEST_RESULTS=$(grep -A 7 "Test Summary" test-results.txt | tail -n +2)
          echo "$TEST_RESULTS" > test-summary.txt

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        run: |
          COMMENT_BODY=$(cat test-summary.txt)
          echo "### Test Results" > comment_body.txt
          echo "$COMMENT_BODY" >> comment_body.txt
          gh pr comment ${{ github.event.pull_request.number }} --body "$(cat comment_body.txt)"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
